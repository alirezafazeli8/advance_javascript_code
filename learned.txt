Whats I Learned?

- DOM

    - what is DOM

    - .querySelector();

    - .remove();

    - .querySelectorAll();

    - .textContent

    - .createElement();

    - .appendChild();

    - .addEventListener();

    - event object

    - e.target

    - change event (new)

    - input event (new)

    - submit event

    - event.preventDefault();

    نکته: نکته اصلی جاوااسکریپت اینه که از رفرش جلوگیری کنه.

    - e.target.elements.elementName (new)

    - change event for checkbox

    - checked property in event.target

    - e.target.value
 

     
- .include() (string method)

- Html 

    - label tag for checkbox in html

    - select and option tag in html

- crud
    
    - localStorage

        - localStorage.setItem();

        - localStorage.getItem();

        - localStorage.removeItem();

        - localStorage.clear();

- json

    JSON.stringify();

    JSON.parse();


- split code (yani sakht file haye mojaza baraye ghesmat haye mokhtalef application man, mesl functions)

- .setAttribute();

- node-uuid package

- new Promise(resolve, reject);

    - myPromise.then(value);

    - myPromise.catch(value);

    - Promise.all([]); // for resolve promise
    // nokte: age hata yekdoone az item haye toye all reject bashe in faghat reject ro neshoon mide.

    - Promise shorthand

    - Promise.any([]);

    - Promise.race([]); // for reject promise

    - Promise.allSettled([]);

    - myPromise.finally();

- async

    - await

    - store promise object in to variable

    - try 

    - catch // nokte joda az inke error haye rejecti ro catch mikone miad har errory ham toye try bashe ro catch mikone 

    - catch parameters

    - finally
    

- fetch(); (promise function)


- send data to api (post)

    - fetch(URL, {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            title: "New Post",
        })
    })


- Browser Storage 

    - (Local Storage) | Size = 10MB | Expires : Never | storage place  = Client (browser) | Work With Data =  Easy

    - (Cookies) | Size = 4KB | Expires : Manual | storage place  = Client / Server | Work With Data =  Hard

    - (Session Storage)| Size = 5MB | Expires : When Tab Is Close | storage place  = Client (browser) | Work With Data =  Easy
 

    - Local Storage

        - localStorage.setItem("key", "value");

        - localStorage.removeItem("key");

        - localStorage.getItem("key");

    - Session Storage 

        - sessionStorage.setItem("key", "value");

        - sessionStorage.removeItem("key");

        - sessionStorage.getItem("key");


    - Cokkies 

        - document.cookie = `name=alireza; expires=${new Date(9999, 0,1).toUTCstring()}`



- html (template) tag


- .content 

- .cloneNode();

- .matches() (method)

- .valueOf(); 

- create specific unique id with date

- map box api

- navigator.geolocation

- navigator.geolocation.getCurrentPosition()

    - load user location when application is started

    - navigation control

    - map box directions


- modules 

    - html (type="module") attribute

    - html (nomodule) attribute

    - export

        - export default 

    - import

    - as (keyword)



- node.js modules 

    - module.exports = {
        key: variableName,
    }

    - require("js file path");

- npm 

    - npm install packageName

    - npm init -y

    - install package from package.json


- .gitignore // if we use this file name we can ignore a specific folder or file in git

- parcel

    - parcel script command

        - parcel index.html

        - parcel build index.html